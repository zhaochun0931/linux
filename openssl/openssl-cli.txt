openssl s_client -connect localhost:443 -help

openssl list -cipher-algorithms


openssl s_client -connect localhost:443 -tls1_1

 -tls1                      Just use TLSv1
 -tls1_1                    Just use TLSv1.1
 -tls1_2                    Just use TLSv1.2
 -tls1_3                    Just use TLSv1.3








# run below command in one terminal to set up an ssl server
openssl s_server -key server.key  -cert server.cert.pem -accept 8443

# run below command in another terminal to connect the ssl server 
openssl s_client -connect localhost:8443






openssl s_server -cert server.cert.pem -key server.key -CAfile ~/myCA/intermediateCA/certs/ca-chain.cert.pem
openssl s_client -CAfile ~/myCA/intermediateCA/certs/ca-chain.cert.pem -cert client.cert.pem -key client.key






openssl s_server -cert server-cert.pem -key server-key.pem -accept 8443
openssl s_client -connect localhost:8443 -cert client-cert.pem -key client-key.pem -CAfile ca-cert.pem -debug -state -msg






# Certificate files usually have a .pem or .crt extension
openssl x509 -in server.crt -text -noout


openssl req -text -noout -verify -in server.csr


openssl rsa -in server.key -check



# verify public key, The public key contained in a private key and a certificate must be the same
openssl x509 -in server.crt -noout -pubkey
openssl rsa -in server.key -pubout

