X.509 is a standard that defines the format of public key certificates.



self-signed certificate (X.509 format) 



A certificate authority (CA)









Certificate formats

There are two encoding formats for certificates:
  • Privacy Enhanced Mail (PEM): These are human-readable and in Base64-encoded ASCII format.
  • Distinguished Encoding Rules (DER): These are encoded in a more compact binary format, and not human readable.

To install a certificate in the trust store it must be in PEM format. A PEM certificate starts with the line ----BEGIN CERTIFICATE----.













Certificates can be saved in various formats.

Privacy-Enhanced Mail
.pem

Personal Information Exchange
.pfx








ASCII PEM format:
A PEM certificate (.pem) file contains a Base64-encoded certificate beginning with -----BEGIN CERTIFICATE----- and ending with -----END CERTIFICATE-----. One of the most common formats for X.509 certificates,



ASCII PEM key	Contains a Base64-encoded DER key


PKCS #12 key and certificate:
A complex format that can store and protect a key and the entire certificate chain. It's commonly used with a .p12 or .pfx extension. PKCS #12 is synonymous with the PFX format.





The public key consists of a string of random numbers and can be used to encrypt a message.







1. symmetric crytptography
use the same key to encrypt and decrypt

2. asymmetric cryptography
use the different key(public key and private key)





The most common algorithms used to generate public keys are:

Rivest–Shamir–Adleman (RSA)
Elliptic curve cryptography (ECC)
Digital signature algorithm (DSA)






















An SSL certificate contains four components that are important to SSL configuration:

Private key: used when encrypting data sent from the server to the client. Data encrypted with the private key can only be deciphered using the public key. 


Public key: used when encrypting data sent from client to server (such as the session key). Data encrypted with the public key can only be decrypted using the private key. The public key is shared with all clients during the SSL handshake that occurs during SSL connection establishment. Public keys of trusted certificates are contained in the trust store.


Signature: serves both to prevent certificate tampering and to establish trust for the certificate. The signature is a hash of other key parts of the certificate that is then encrypted using the private key of either the same certificate (for a self-signed certificate) or a certificate authority (CA) such as Verisign. If a CA signs a certificate, the certificate will also contain the certificate(s) of the signer(s) in a certificate chain. The certificate at the end of a certificate chain (the root CA) must be trusted for the certificate to be accepted.


Common name (CN): usually the name of the host being authenticated. The HTTPS protocol requires that the CN in the certificate matches the host name in the HTTPS URL. 








After Chrome 58, self-signed certificate without SAN(Subject Alternative Name) is not valid anymore.



Certificate without SAN:

Typically only secures a single domain name (the Common Name, or CN).
For example, if the CN is example.com, the certificate is valid only for that domain.



Certificate with SAN:

Can secure multiple domain names within a single certificate.





private key
|
|
|
public key
|
|
|
(certificate signing request)CSR










