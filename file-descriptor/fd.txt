A file descriptor (FD) is a low-level integer handle used by the operating system (especially Unix-like systems) to reference an open file, socket, pipe, or other I/O resource.

Every process has a file descriptor table, and when a process opens a file (or a socket, pipe, etc.), the OS returns an integer (starting from 0) that refers to it:

+------------+-------------------+
| FD Number  | Meaning           |
+------------+-------------------+
| 0          | stdin             |
| 1          | stdout            |
| 2          | stderr            |
| 3+         | Other open files  |
+------------+-------------------+








ulimit -n












my_script.sh > output.log 2>&1 &









| Part   | Meaning                                                                   |
| ------ | ------------------------------------------------------------------------- |
| `2>`   | Redirect **standard error (stderr)**.                                     |
| `2>&1` | Redirect **stderr** to the same location as **standard output (stdout)**. |
| `&`    | Run the command in the **background**.                                    |








This command does 3 things:

Runs my_script.sh.

Redirects both stdout and stderr into output.log.

Runs the command in the background, freeing up the shell.
